{"version":3,"file":"static/webpack/static/development/pages/_app.js.b90464ec6e41a8b418b4.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import App, { Container } from 'next/app';\n\nimport Page from '../components/Page';\n\nimport { ApolloProvider } from 'react-apollo';\nimport withData from '../lib/withData';\n\n\n\n// function MyApp({ Component, pageProps }) {\n// //this effectively makes all the pages in dir /pages like index.js and sell.js (which are represented below as <Component>) children of the Page component (created in in components/Page.js).  In the definition of the component Page, these children are referred to as {this.props.children}\n// \treturn (\n// \t\t<Page>\n// \t\t\t<Component {...pageProps} /> \n// \t\t</Page>\n// \t);\n// }\n// export default MyApp; \n\n\n//this effectively makes all the pages in dir /pages like index.js and sell.js (which are represented below as <Component>) children of the Page component (created in in components/Page.js).  In the definition of the component Page, these children are referred to as {this.props.children}\nclass MyApp extends App {\n\n\t//The static keyword defines a static method for a class. Static methods aren't called on instances of the class. Instead, they're called on the class itself\n\t// we are destructuring the Component and ctx elements of an object passed to getInitialProps method of the app\n\tstatic async getInitialProps({ Component, ctx }) {\n\t\tlet pageProps = {};\n\t\t//see if there are any initial props for Component, which we will render in render() below.  if yes, then pageProps gets assigned\n\t\tif (Component.getInitialProps) {\n\t\t\tpageProps = await Component.getInitialProps(ctx);\n\t\t}\n\t\t//this exposes the query to the user\n\t\t//query is an element of the context object, which is an argument given to getInitialProps.  it contains what we wanna query fron the backend database.  we're gonna assign it to a new 'query' element of the object pageProps query\n\t\t//https://nextjs.org/docs/api-reference/data-fetching/getInitialProps#context-object\n\t\t//https://nextjs.org/docs/advanced-features/custom-app#caveats\n\n\t\tpageProps.query = ctx.query;\n\t\treturn pageProps; //this makes pageProps available in this.props.\n\t}\n\trender() {\n\t\tconst { Component, apollo, pageProps } = this.props;\n\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<ApolloProvider client={this.props.apollo}>\n\t\t\t\t\t<Page>\n\t\t\t\t\t\t<Component /> \n\t\t\t\t\t</Page>\n\t\t\t\t</ApolloProvider>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\n//wrapping myApp in withData will provide 'this.props.apollo' to MyApp\nexport default withData(MyApp); "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;;;;;;;;;;;;;AAkBA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;AA5BA;AACA;;;;;;;;;;AACA;AACA;AACA;AACA;;;;;;AACA;AACA;;AADA;AACA;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;AAjBA;AACA;AACA;AAgCA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}