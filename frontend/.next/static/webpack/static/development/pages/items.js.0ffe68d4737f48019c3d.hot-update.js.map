{"version":3,"file":"static/webpack/static/development/pages/items.js.0ffe68d4737f48019c3d.hot-update.js","sources":["webpack:///./components/items.js"],"sourcesContent":["import React, { Component } from 'react'; \nimport {Query} from 'react-apollo';\nimport styled from 'styled-components';\n\n// utilies https://github.com/apollographql/graphql-tag\n//it is basically a template literal we use to start and end a graphql query that we normally cna write in a prisma playground\nimport gql from 'graphql-tag';\n\n\n//render prop\nconst ALL_ITEMS_QUERY = gql`\n\tquery ALL_ITEMS_QUERY {\n\t\titems {\n\t\t\tid\n\t\t\ttitle\n\t\t\tprice\n\t\t\tdescription\n\t\t\timage\n\t\t\tlargeImage\n\t\t}\n\t}\n`;\n\nconst Center = styled.div`\n\ttext-align: center;\n`;\n\nconst ItemsList = styled.div`\n\tdisplay: grid;\n\tgrid-auto-columns: 1fr 1fr;\n\tgrid-gap: 60px;\n\tmax-width: ${props => props.theme.maxWidth};\n\tmargin: 0 auto;\n`;\n\n//the first curly bracket set of the content of <Query> is a custom way for Query to switch from JSX to just regular JS\nclass Items extends Component {\n  render() {\n    return (\n      <Center>\n        <Query query={ALL_ITEMS_QUERY}>\n          {({ data, error, loading }) => {\n            if (loading) return <p>Loading...</p>;\n            if (error) return <p>Error: {error.message}</p>;\n            return (\n              <ItemsList>{data.items.map(item => <p>{item.title}</p>)}\n              </ItemsList>\n            );\n          }}\n        </Query>\n      </Center>\n    );\n  }\n}\nexport default Items;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAGA;AAaA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAIA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAIA;;;;AAhBA;AACA;AAiBA;;;;A","sourceRoot":""}